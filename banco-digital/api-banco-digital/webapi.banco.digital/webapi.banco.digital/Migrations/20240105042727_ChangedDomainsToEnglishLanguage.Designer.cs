// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using webapi.banco.digital.Infra;

#nullable disable

namespace webapi.banco.digital.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240105042727_ChangedDomainsToEnglishLanguage")]
    partial class ChangedDomainsToEnglishLanguage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("webapi.banco.digital.Domains.Account", b =>
                {
                    b.Property<Guid>("IdAccount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Balance")
                        .HasMaxLength(15)
                        .HasColumnType("real");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("IdAccount");

                    b.HasIndex("Number")
                        .IsUnique();

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("webapi.banco.digital.Domains.Transfer", b =>
                {
                    b.Property<Guid>("IdTransfer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<Guid>("IdRecipientUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSenderUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Value")
                        .HasMaxLength(15)
                        .HasColumnType("real");

                    b.HasKey("IdTransfer");

                    b.HasIndex("IdRecipientUser");

                    b.HasIndex("IdSenderUser");

                    b.ToTable("Transferencias");
                });

            modelBuilder.Entity("webapi.banco.digital.Domains.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CpfOrCnpj")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("IdAccount")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUserType")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)");

                    b.HasKey("Id");

                    b.HasIndex("CpfOrCnpj")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IdAccount");

                    b.HasIndex("IdUserType");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("webapi.banco.digital.Domains.UserType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TiposUsuario");
                });

            modelBuilder.Entity("webapi.banco.digital.Domains.Transfer", b =>
                {
                    b.HasOne("webapi.banco.digital.Domains.User", "RecipientUser")
                        .WithMany()
                        .HasForeignKey("IdRecipientUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.banco.digital.Domains.User", "SenderUser")
                        .WithMany()
                        .HasForeignKey("IdSenderUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RecipientUser");

                    b.Navigation("SenderUser");
                });

            modelBuilder.Entity("webapi.banco.digital.Domains.User", b =>
                {
                    b.HasOne("webapi.banco.digital.Domains.Account", "Account")
                        .WithMany()
                        .HasForeignKey("IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("webapi.banco.digital.Domains.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("IdUserType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("UserType");
                });
#pragma warning restore 612, 618
        }
    }
}
